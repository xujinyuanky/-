#include<stdio.h>
struct edge 
{
	int u;
	int v;
	int w;
};
struct edge e[1000];
int n,m;
int f[1000]={0},sum=0,count=0;
void quicksort(int l,int r)
{
	int i,j;
	struct edge t;
	if(l>r)
		return;
	i=l;
	j=r;
	while(i!=j)
	{
		while(e[j].w>=e[l].w&&i<j)
			j--;
		while(e[i].w<=e[l].w&&i<j)
			i++;
		if(i<j)
		{
			t=e[i];
			e[i]=e[j];
			e[j]=t;
		}
	}
	t=e[l];
	e[l]=e[i];
	e[i]=t;
	quicksort(l,i-1);
	quicksort(i+1,r);
	return;
}
int getf(int v)
{
	if(f[v]==v)
		return v;
	else
	{
		f[v]=getf(f[v]);
		return f[v];
	}
}
int blending(int v,int u)
{
	int t,p;
	t=getf(v);
	p=getf(u);
	if(t!=p)
	{
		f[p]=t;
		return 1;
	}
	return 0;
}
int main()
{
	int i;
	scanf("%d %d",&n,&m);
	for(i=1;i<=m;i++)
		scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].w);
	quicksort(1,m);
	for(i=1;i<=n;i++)
		f[i]=i;
	for(i=1;i<=m;i++)
	{
		if(blending(e[i].u,e[i].v))
		{
		count++;
		sum+=e[i].w;
		}
		if(count==n-1)
		break;
	}
	printf("%d\n",sum);
	return 0;
}
